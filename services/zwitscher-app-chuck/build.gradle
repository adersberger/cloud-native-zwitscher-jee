apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = "de.qaware.playground.zwitscher.chuck.Main"

ext {
    kumuluzVersion = '2.0.0'
    jerseyVersion = '2.17' //required by KumuluzEE 2.0.0
    weldVersion = '2.3.3.Final' //required by KumuluzEE 2.0.0
    deltaSpikeVersion = '1.7.1'
    metricsVersion = '3.1.2'
    hystrixVersion = '1.5.4'
    applicationPort = 12340 //port to be used in task application:run
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    //KumuluzEE micro JEE container
    compile "com.kumuluz.ee:kumuluzee-core:$kumuluzVersion"
    compile "com.kumuluz.ee:kumuluzee-servlet-jetty:$kumuluzVersion"
    compile "com.kumuluz.ee:kumuluzee-jax-rs-jersey:$kumuluzVersion"
    compile "com.kumuluz.ee:kumuluzee-cdi-weld:$kumuluzVersion"

    //Consul service discovery and utils
    compile "com.ecwid.consul:consul-api:1.1.11"
    compile "io.mikael:urlbuilder:2.0.7"

    //Hystric resiliency
    compile "org.glassfish.jersey.ext.rx:jersey-rx-client-rxjava:$jerseyVersion"
    compile "com.netflix.hystrix:hystrix-core:$hystrixVersion"
    compile "com.netflix.hystrix:hystrix-metrics-event-stream:$hystrixVersion"
    compile "com.netflix.hystrix:hystrix-codahale-metrics-publisher:$hystrixVersion"

    //Metrics diagnosability
    compile "io.dropwizard.metrics:metrics-core:$metricsVersion"
    compile "io.dropwizard.metrics:metrics-healthchecks:$metricsVersion"
    compile "io.dropwizard.metrics:metrics-servlets:$metricsVersion"
    compile "io.dropwizard.metrics:metrics-jersey2:$metricsVersion"

    //Logging with SLF4J
    compile "org.slf4j:slf4j-simple:1.7.21"

    //Google Guava
    compile "com.google.guava:guava:19.0"

    //Testing framework
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "junit:junit:4.12"

    //Apache DeltaSpike JEE testing facility
    testCompile "org.apache.deltaspike.modules:deltaspike-test-control-module-impl:$deltaSpikeVersion"
    testRuntime "org.apache.deltaspike.modules:deltaspike-test-control-module-api:$deltaSpikeVersion"
    testRuntime "org.apache.deltaspike.cdictrl:deltaspike-cdictrl-weld:$deltaSpikeVersion"
    testRuntime "org.jboss.weld.se:weld-se-core:$weldVersion"
}

//copy all jar dependencies into dependency folder after build (required by KumuluzEE)
task copyDependencies(type: Copy) {
    from configurations.compile
    into 'build/dependency'
}
build.finalizedBy(copyDependencies)

//copy all resources into classes folder (required by KumuluzEE and Deltaspike)
sourceSets {
    main {
        output.resourcesDir = "build/classes"
        output.classesDir = 'build/classes'
    }
    test {
        output.resourcesDir = 'build/classes/test'
        output.classesDir   = 'build/classes/test'
    }
}

//set appropriate KumuluzEE listening port when application:run
tasks.withType(JavaExec) {
    environment = ['PORT': applicationPort]
}